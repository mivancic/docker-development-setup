version: '3'
name: docker-development-setup
services:
  devcontainer:
    container_name: devcontainer
    hostname: devcontainer
    build:
      context: devcontainer/
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available/php:/etc/nginx/sites-enabled/php
      - ./nginx/sites-available/sf:/etc/nginx/sites-enabled/sf
      - ./nginx/sites-available/ez:/etc/nginx/sites-enabled/ez
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - /private/var/www/:/private/var/www/
      - ./devcontainer/supervisord.conf:/etc/supervisor/supervisord.conf:ro
      - ./ssl/server.crt:/etc/nginx/server.crt
      - ./ssl/server.key:/etc/nginx/server.key
      - ./ssl/root.crt:/usr/local/share/ca-certificates/root.crt
    command:
      - /usr/local/bin/supervisord
    networks:
      - mysql-network
      - redis-network

  mysql:
    container_name: mysql
    image: mysql:8.0.32-debian
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin
    networks:
      - mysql-network

  redis:
    image: redis:7.0.9-alpine3.17
    container_name: redis
    networks:
      - redis-network

  cloudbeaver:
    container_name: cloudbeaver
    image: dbeaver/cloudbeaver:23.0.4
    networks:
      - mysql-network
    ports:
      # TEMPORARY HACK
      # this allows access through `http://localhost:8080/`
      # the idea is to refactor this to be accessed through nginx
      # remove port forwarding here, add a corresponding nginx site config
      - 8080:8978
    restart: unless-stopped
    volumes:
      - cloudbeaver-data:/opt/cloudbeaver/workspace

networks:
  mysql-network:
  redis-network:

volumes:
  mysql-data:
    name: mysql-data
  cloudbeaver-data:
    name: cloudbeaver-data
